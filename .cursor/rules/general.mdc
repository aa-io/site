---
description: 
globs: 
alwaysApply: true
---
# General Project Rules

## Project Overview

This is a Next.js 15 application with App Router, React 19, TypeScript, shadcn/ui components, and Tailwind CSS 4.

## Tech Stack

- **Framework**: Next.js 15 with App Router and Turbopack
- **Runtime**: React 19
- **Language**: TypeScript with strict mode
- **Styling**: Tailwind CSS 4
- **UI Components**: Radix UI with shadcn/ui
- **Animations**: Motion (Framer Motion)
- **Theme**: next-themes for dark/light mode
- **Icons**: Tabler Icons
- **Content**: MDX with custom components
- **Package Manager**: pnpm
- **Font**: Custom Soehne font family

## File Structure Conventions

- Use the App Router structure (`app/` directory)
- Group related pages in route groups using `(folder-name)/`
- Keep components in `app/components/`
- Store shared UI components in `app/components/ui/`
- Place static assets in `public/`
- Custom fonts go in `app/assets/font/`
- Data files go in `data/` directory
- Cursor AI rules in `.cursor/rules/`

## Naming Conventions

- **Files**: Use kebab-case for all files (e.g., `work-row.tsx`, `social-link.tsx`)
- **Components**: Use PascalCase for component names (e.g., `WorkRow`, `SocialLink`)
- **Functions**: Use camelCase for function names
- **CSS Classes**: Use Tailwind utility classes, avoid custom CSS when possible
- **Data Types**: Use PascalCase for TypeScript types and interfaces

## Import Order

1. React/Next.js imports
2. Third-party library imports
3. Local component imports
4. Type imports
5. Style/asset imports

## Code Quality

- Always use TypeScript strict mode
- Prefer functional components with hooks
- Use proper TypeScript types, avoid `any`
- Keep components small and focused
- Extract reusable logic into custom hooks
- Format code with Prettier configuration
- Use proper prop types for all components

## Performance Best Practices

- Use Next.js Image component for all images
- Implement proper loading states
- Use dynamic imports for heavy components
- Optimize font loading with custom font files
- Minimize client-side JavaScript when possible
- Leverage Turbopack for fast development builds
